# Generated by Django 4.1.3 on 2023-03-24 20:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('evaluation_service', '0002_storeddataset_storeddataset_unique_stored_dataset'),
    ]

    operations = [
        migrations.CreateModel(
            name='SpecificationTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_name', models.CharField(help_text='The name of the template', max_length=100, verbose_name='name')),
                ('template_specification_type', models.CharField(choices=[('BackendSpecification', 'Backend'), ('FieldMappingSpecification', 'Field Mapping'), ('AssociatedField', 'Associated Field'), ('ValueSelector', 'Value Selector'), ('LocationSpecification', 'Location'), ('UnitDefinition', 'Unit Definition'), ('MetricSpecification', 'Metric'), ('SchemeSpecification', 'Scheme'), ('ThresholdDefinition', 'Threshold Definition'), ('ThresholdApplicationRules', 'Threshold Application Rules'), ('EvaluationSpecification', 'Evaluation'), ('CrosswalkSpecification', 'Crosswalk'), ('DataSourceSpecification', 'Data Source'), ('ThresholdSpecification', 'Threshold')], help_text='The type of specification that this template pertains to', max_length=50)),
                ('template_configuration', models.CharField(help_text='The configuration that should be applied to a given specification type', max_length=30000)),
                ('template_description', models.CharField(blank=True, help_text='A description of what the template does', max_length=500, null=True)),
                ('author', models.ForeignKey(help_text='The user who created this template', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='specificationtemplate',
            constraint=models.UniqueConstraint(fields=('template_name', 'template_specification_type'), name='unique_template_idx'),
        ),
    ]

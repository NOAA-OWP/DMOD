# Generated by Django 4.2.11 on 2024-04-17 14:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EvaluationDefinition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the evaluation', max_length=255)),
                ('author', models.CharField(blank=True, help_text='The name of the author of the evaluation', max_length=255, null=True)),
                ('description', models.TextField(blank=True, help_text='A helpful description of what the evaluation is intended to do', null=True)),
                ('definition', models.JSONField(help_text='The raw json that will be sent as the instructions to the evaluation service')),
            ],
        ),
        migrations.CreateModel(
            name='SpecificationTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_name', models.CharField(help_text='The name of the template', max_length=100, verbose_name='name')),
                ('template_specification_type', models.CharField(choices=[('BackendSpecification', 'Backend'), ('FieldMappingSpecification', 'Field Mapping'), ('AssociatedField', 'Associated Field'), ('ValueSelector', 'Value Selector'), ('LocationSpecification', 'Location'), ('UnitDefinition', 'Unit Definition'), ('MetricSpecification', 'Metric'), ('SchemeSpecification', 'Scheme'), ('ThresholdDefinition', 'Threshold Definition'), ('ThresholdApplicationRules', 'Threshold Application Rules'), ('EvaluationSpecification', 'Evaluation'), ('CrosswalkSpecification', 'Crosswalk'), ('DataSourceSpecification', 'Data Source'), ('ThresholdSpecification', 'Threshold')], help_text='The type of specification that this template pertains to', max_length=50)),
                ('template_configuration', models.JSONField(help_text='The configuration that should be applied to a given specification type')),
                ('template_description', models.CharField(blank=True, help_text='A description of what the template does', max_length=500, null=True)),
                ('template_last_modified', models.DateTimeField(auto_now=True, help_text='When this was last modified')),
            ],
        ),
        migrations.CreateModel(
            name='StoredDataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='An easy to reference name for the dataset', max_length=255)),
                ('path', models.CharField(help_text='The path to the dataset', max_length=500)),
                ('dataset_type', models.CharField(choices=[('geometry', 'Geometry')], help_text='The type of data the dataset provides', max_length=100)),
                ('dataset_format', models.CharField(choices=[('gpkg', 'GeoPackage'), ('json', 'JSON'), ('geojson', 'GeoJSON')], help_text='The format of the dataset', max_length=100)),
            ],
        ),
        migrations.AddConstraint(
            model_name='storeddataset',
            constraint=models.UniqueConstraint(fields=('dataset_type', 'name'), name='unique_stored_dataset'),
        ),
        migrations.AddField(
            model_name='specificationtemplate',
            name='author',
            field=models.ForeignKey(help_text='The user who created this template', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='evaluationdefinition',
            name='owner',
            field=models.ForeignKey(blank=True, help_text='The user who owns the editing rights on this definition', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='specificationtemplate',
            constraint=models.UniqueConstraint(fields=('template_name',), name='unique_template_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='evaluationdefinition',
            unique_together={('name', 'owner')},
        ),
    ]

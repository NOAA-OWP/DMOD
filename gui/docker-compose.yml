version: "3"

# Declare all services that will be formed within their own containers
services:
  # Define a container belonging exclusively to nginx
  nginx:
    # Use the most barebones postgres instance
    image: nginx:1.16
    # Only restart if a failure occurs
    restart: on-failure
    # Forward everything hitting localhost on port 1337 to port 80 within the container
    ports:
      - 8081:80
    # Link everything within the static volume to /usr/wres-gui/static within the container -
    # this will help share resources
    volumes:
      - static_volume:/usr/maas_portal/static
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    # Make this container depend on the container holding the application server
    depends_on:
      - app_server
  # Define a container belonging exclusively to our django application
  app_server:
    # Build the container based on this current directory
    build: .
    image: maas-portal-development
    # Call this when starting the container
    command: gunicorn maas_experiment.wsgi:application --bind 0.0.0.0:8000
    # Only restart if a failure was encountered
    restart: on-failure
    # Run in debug mode and set all of the variables needed to connect to the postgres server on the internal network
    environment:
      - MAAS_ENDPOINT=https://nwcal-wres-ti.nwc.nws.noaa.gov/job
      - MAAS_PORTAL_DEBUG=true
    volumes:
      - static_volume:/usr/maas_portal/static
    # Expose Django's port to the internal network so that nginx may access it
    expose:
      - 8000

# Define persistent volumes that may be shared and persisted between containers
volumes:
  static_volume:
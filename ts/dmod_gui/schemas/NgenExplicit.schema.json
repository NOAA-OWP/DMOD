{
  "title": "NgenExplicit",
  "description": "Data class specific for Ngen\n\nInherits the ModelParams attributes and Configurable interface",
  "type": "object",
  "properties": {
    "binary": {
      "title": "Binary",
      "default": "ngen",
      "type": "string"
    },
    "args": {
      "title": "Args",
      "type": "string"
    },
    "workdir": {
      "title": "Workdir",
      "default": ".",
      "format": "directory-path",
      "type": "string"
    },
    "type": {
      "title": "Type",
      "enum": [
        "ngen"
      ],
      "type": "string"
    },
    "realization": {
      "title": "Realization",
      "format": "file-path",
      "type": "string"
    },
    "catchments": {
      "title": "Catchments",
      "format": "file-path",
      "type": "string"
    },
    "nexus": {
      "title": "Nexus",
      "format": "file-path",
      "type": "string"
    },
    "crosswalk": {
      "title": "Crosswalk",
      "format": "file-path",
      "type": "string"
    },
    "ngen_realization": {
      "$ref": "#/definitions/NgenRealization"
    },
    "partitions": {
      "title": "Partitions",
      "format": "file-path",
      "type": "string"
    },
    "parallel": {
      "title": "Parallel",
      "exclusiveMinimum": -1,
      "type": "integer"
    },
    "params": {
      "title": "Params",
      "type": "object",
      "additionalProperties": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Parameter"
        }
      }
    },
    "strategy": {
      "title": "Strategy",
      "enum": [
        "explicit"
      ],
      "type": "string"
    }
  },
  "required": [
    "type",
    "realization",
    "catchments",
    "nexus",
    "crosswalk",
    "strategy"
  ],
  "definitions": {
    "TopmodParams": {
      "title": "TopmodParams",
      "description": "Class for validating Topmod Parameters\n    ",
      "type": "object",
      "properties": {
        "sr0": {
          "title": "Sr0",
          "type": "number"
        },
        "srmax": {
          "title": "Srmax",
          "type": "number"
        },
        "szm": {
          "title": "Szm",
          "type": "number"
        },
        "t0": {
          "title": "T0",
          "type": "number"
        },
        "td": {
          "title": "Td",
          "type": "number"
        }
      }
    },
    "Topmod": {
      "title": "Topmod",
      "description": "A BMIC implementation for the Topmod ngen module\n    ",
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "default": "bmi_c",
          "const": "bmi_c",
          "type": "string"
        },
        "model_type_name": {
          "title": "Model Type Name",
          "default": "TOPMODEL",
          "const": "TOPMODEL",
          "type": "string"
        },
        "main_output_variable": {
          "title": "Main Output Variable",
          "default": "Qout",
          "type": "string"
        },
        "init_config": {
          "title": "Init Config",
          "anyOf": [
            {
              "type": "string",
              "format": "file-path"
            },
            {
              "type": "string"
            }
          ]
        },
        "allow_exceed_end_time": {
          "title": "Allow Exceed End Time",
          "default": false,
          "type": "boolean"
        },
        "fixed_time_step": {
          "title": "Fixed Time Step",
          "default": false,
          "type": "boolean"
        },
        "uses_forcing_file": {
          "title": "Uses Forcing File",
          "default": false,
          "type": "boolean"
        },
        "variables_names_map": {
          "title": "Variables Names Map",
          "default": {},
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "output_variables": {
          "title": "Output Variables",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "output_headers": {
          "title": "Output Headers",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "model_params": {
          "$ref": "#/definitions/TopmodParams"
        },
        "library_file": {
          "title": "Library File",
          "anyOf": [
            {
              "type": "string",
              "format": "file-path"
            },
            {
              "type": "string"
            }
          ]
        },
        "registration_function": {
          "title": "Registration Function",
          "default": "register_bmi_topmodel",
          "type": "string"
        }
      },
      "required": [
        "init_config",
        "library_file"
      ]
    },
    "CFEParams": {
      "title": "CFEParams",
      "description": "Class for validating CFE Parameters\n    ",
      "type": "object",
      "properties": {
        "maxsmc": {
          "title": "Maxsmc",
          "type": "number"
        },
        "satdk": {
          "title": "Satdk",
          "type": "number"
        },
        "slope": {
          "title": "Slope",
          "type": "number"
        },
        "bb": {
          "title": "Bb",
          "type": "number"
        },
        "multiplier": {
          "title": "Multiplier",
          "type": "number"
        },
        "expon": {
          "title": "Expon",
          "type": "number"
        }
      }
    },
    "CFE": {
      "title": "CFE",
      "description": "A BMIC implementation for the CFE ngen module\n    ",
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "default": "bmi_c",
          "const": "bmi_c",
          "type": "string"
        },
        "model_type_name": {
          "title": "Model Type Name",
          "default": "CFE",
          "const": "CFE",
          "type": "string"
        },
        "main_output_variable": {
          "title": "Main Output Variable",
          "default": "Q_OUT",
          "type": "string"
        },
        "init_config": {
          "title": "Init Config",
          "anyOf": [
            {
              "type": "string",
              "format": "file-path"
            },
            {
              "type": "string"
            }
          ]
        },
        "allow_exceed_end_time": {
          "title": "Allow Exceed End Time",
          "default": false,
          "type": "boolean"
        },
        "fixed_time_step": {
          "title": "Fixed Time Step",
          "default": false,
          "type": "boolean"
        },
        "uses_forcing_file": {
          "title": "Uses Forcing File",
          "default": false,
          "type": "boolean"
        },
        "variables_names_map": {
          "title": "Variables Names Map",
          "default": {},
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "output_variables": {
          "title": "Output Variables",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "output_headers": {
          "title": "Output Headers",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "model_params": {
          "$ref": "#/definitions/CFEParams"
        },
        "library_file": {
          "title": "Library File",
          "anyOf": [
            {
              "type": "string",
              "format": "file-path"
            },
            {
              "type": "string"
            }
          ]
        },
        "registration_function": {
          "title": "Registration Function",
          "default": "register_bmi_cfe",
          "type": "string"
        }
      },
      "required": [
        "init_config",
        "library_file"
      ]
    },
    "NoahOWPParams": {
      "title": "NoahOWPParams",
      "description": "Class for validating NoahOWP Parameters\n    ",
      "type": "object",
      "properties": {}
    },
    "NoahOWP": {
      "title": "NoahOWP",
      "description": "A BMIFortran implementation for a noahowp module\n    ",
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "default": "bmi_fortran",
          "const": "bmi_fortran",
          "type": "string"
        },
        "model_type_name": {
          "title": "Model Type Name",
          "default": "NoahOWP",
          "const": "NoahOWP",
          "type": "string"
        },
        "main_output_variable": {
          "title": "Main Output Variable",
          "default": "QINSUR",
          "type": "string"
        },
        "init_config": {
          "title": "Init Config",
          "anyOf": [
            {
              "type": "string",
              "format": "file-path"
            },
            {
              "type": "string"
            }
          ]
        },
        "allow_exceed_end_time": {
          "title": "Allow Exceed End Time",
          "default": false,
          "type": "boolean"
        },
        "fixed_time_step": {
          "title": "Fixed Time Step",
          "default": false,
          "type": "boolean"
        },
        "uses_forcing_file": {
          "title": "Uses Forcing File",
          "default": false,
          "type": "boolean"
        },
        "variables_names_map": {
          "title": "Variables Names Map",
          "default": {},
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "output_variables": {
          "title": "Output Variables",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "output_headers": {
          "title": "Output Headers",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "model_params": {
          "$ref": "#/definitions/NoahOWPParams"
        },
        "library_file": {
          "title": "Library File",
          "anyOf": [
            {
              "type": "string",
              "format": "file-path"
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "required": [
        "init_config",
        "library_file"
      ]
    },
    "LSTM": {
      "title": "LSTM",
      "description": "A BMIPython implementation for an ngen LSTM module\n    ",
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "default": "bmi_python",
          "const": "bmi_python",
          "type": "string"
        },
        "model_type_name": {
          "title": "Model Type Name",
          "default": "LSTM",
          "type": "string"
        },
        "main_output_variable": {
          "title": "Main Output Variable",
          "default": "land_surface_water__runoff_depth",
          "enum": [
            "land_surface_water__runoff_depth"
          ],
          "type": "string"
        },
        "init_config": {
          "title": "Init Config",
          "anyOf": [
            {
              "type": "string",
              "format": "file-path"
            },
            {
              "type": "string"
            }
          ]
        },
        "allow_exceed_end_time": {
          "title": "Allow Exceed End Time",
          "default": false,
          "type": "boolean"
        },
        "fixed_time_step": {
          "title": "Fixed Time Step",
          "default": false,
          "type": "boolean"
        },
        "uses_forcing_file": {
          "title": "Uses Forcing File",
          "default": false,
          "type": "boolean"
        },
        "variables_names_map": {
          "title": "Variables Names Map",
          "default": {},
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "output_variables": {
          "title": "Output Variables",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "output_headers": {
          "title": "Output Headers",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "model_params": {
          "title": "Model Params",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "python_type": {
          "title": "Python Type",
          "default": "bmi_lstm.bmi_LSTM",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "required": [
        "init_config"
      ]
    },
    "MultiBMI": {
      "title": "MultiBMI",
      "description": "A MultiBMI model definition\nImplements and overrids several BMIParams attributes,\nand includes a recursive Formulation list `modules`",
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "default": "bmi_multi",
          "const": "bmi_multi",
          "type": "string"
        },
        "model_type_name": {
          "title": "Model Type Name",
          "type": "string"
        },
        "main_output_variable": {
          "title": "Main Output Variable",
          "type": "string"
        },
        "init_config": {
          "title": "Init Config",
          "default": "",
          "const": "",
          "type": "string"
        },
        "allow_exceed_end_time": {
          "title": "Allow Exceed End Time",
          "default": false,
          "type": "boolean"
        },
        "fixed_time_step": {
          "title": "Fixed Time Step",
          "default": false,
          "type": "boolean"
        },
        "uses_forcing_file": {
          "title": "Uses Forcing File",
          "default": false,
          "type": "boolean"
        },
        "name_map": {
          "title": "Name Map",
          "const": null,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "output_variables": {
          "title": "Output Variables",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "output_headers": {
          "title": "Output Headers",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "model_params": {
          "title": "Model Params",
          "const": null,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "modules": {
          "title": "Modules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Formulation"
          }
        }
      },
      "required": [
        "modules"
      ]
    },
    "Formulation": {
      "title": "Formulation",
      "description": "Model of an ngen formulation\n    ",
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "descriminator": "model_name",
          "anyOf": [
            {
              "$ref": "#/definitions/Topmod"
            },
            {
              "$ref": "#/definitions/CFE"
            },
            {
              "$ref": "#/definitions/NoahOWP"
            },
            {
              "$ref": "#/definitions/LSTM"
            },
            {
              "$ref": "#/definitions/MultiBMI"
            }
          ]
        }
      },
      "required": [
        "name",
        "params"
      ]
    },
    "Provider": {
      "title": "Provider",
      "description": "Enumeration of the supported NGEN forcing provider strings\n        ",
      "enum": [
        "CsvPerFeature",
        "FIXME"
      ],
      "type": "string"
    },
    "Forcing": {
      "title": "Forcing",
      "description": "Model for ngen forcing component inputs\n    ",
      "type": "object",
      "properties": {
        "file_pattern": {
          "title": "File Pattern",
          "anyOf": [
            {
              "type": "string",
              "format": "file-path"
            },
            {
              "type": "string"
            }
          ]
        },
        "path": {
          "title": "Path",
          "anyOf": [
            {
              "type": "string",
              "format": "directory-path"
            },
            {
              "type": "string",
              "format": "file-path"
            },
            {
              "type": "string"
            }
          ]
        },
        "provider": {
          "default": "CsvPerFeature",
          "allOf": [
            {
              "$ref": "#/definitions/Provider"
            }
          ]
        }
      },
      "required": [
        "path"
      ]
    },
    "Realization": {
      "title": "Realization",
      "description": "Simple model of a Realization, containing formulations and forcing\n    ",
      "type": "object",
      "properties": {
        "formulations": {
          "title": "Formulations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Formulation"
          }
        },
        "forcing": {
          "$ref": "#/definitions/Forcing"
        },
        "calibration": {
          "title": "Calibration",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {}
          }
        }
      },
      "required": [
        "formulations",
        "forcing"
      ]
    },
    "Time": {
      "title": "Time",
      "description": "Model for ngen time configuraiton components\n    ",
      "type": "object",
      "properties": {
        "start_time": {
          "title": "Start Time",
          "type": "string",
          "format": "date-time"
        },
        "end_time": {
          "title": "End Time",
          "type": "string",
          "format": "date-time"
        },
        "output_interval": {
          "title": "Output Interval",
          "default": 3600,
          "exclusiveMinimum": 0,
          "type": "integer"
        }
      },
      "required": [
        "start_time",
        "end_time"
      ]
    },
    "Routing": {
      "title": "Routing",
      "description": "Model for ngen routing configuration information\n    ",
      "type": "object",
      "properties": {
        "t_route_config_file_with_path": {
          "title": "T Route Config File With Path",
          "format": "file-path",
          "type": "string"
        },
        "t_route_connection_path": {
          "title": "T Route Connection Path",
          "default": "",
          "type": "string"
        }
      },
      "required": [
        "t_route_config_file_with_path"
      ]
    },
    "CatchmentRealization": {
      "title": "CatchmentRealization",
      "description": "Simple model of a Realization, containing formulations and forcing\n    ",
      "type": "object",
      "properties": {
        "formulations": {
          "title": "Formulations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Formulation"
          }
        },
        "forcing": {
          "$ref": "#/definitions/Forcing"
        },
        "calibration": {
          "title": "Calibration",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {}
          }
        }
      },
      "required": [
        "formulations"
      ]
    },
    "NgenRealization": {
      "title": "NgenRealization",
      "description": "A complete ngen realization confiiguration model, including global and catchment overrides\n    ",
      "type": "object",
      "properties": {
        "global": {
          "$ref": "#/definitions/Realization"
        },
        "time": {
          "$ref": "#/definitions/Time"
        },
        "routing": {
          "$ref": "#/definitions/Routing"
        },
        "catchments": {
          "title": "Catchments",
          "default": {},
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CatchmentRealization"
          }
        }
      },
      "required": [
        "global",
        "time"
      ]
    },
    "Parameter": {
      "title": "Parameter",
      "description": "The data class for a given parameter",
      "type": "object",
      "properties": {
        "param": {
          "title": "Param",
          "type": "string"
        },
        "min": {
          "title": "Min",
          "type": "number"
        },
        "max": {
          "title": "Max",
          "type": "number"
        },
        "init": {
          "title": "Init",
          "type": "number"
        }
      },
      "required": [
        "param",
        "min",
        "max",
        "init"
      ]
    }
  }
}